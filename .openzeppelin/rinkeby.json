{
  "manifestVersion": "3.2",
  "proxies": [],
  "impls": {
    "447256d97135e9d96623ede08562727f68a1204e2a4c1852b1066f0dd6a12cd5": {
      "address": "0xe5279e95e2B4DAE74A0FAe7ce6F03B396b630697",
      "txHash": "0x152167f9c5a39de97b50ef193ddd029627f292d46233798386177d474841bf58",
      "layout": {
        "storage": [
          {
            "label": "questions",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_struct(Question)4321_storage)dyn_storage",
            "contract": "BinaryMarketData",
            "src": "contracts\\BinaryMarketData.sol:24"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(Market)4330_storage)",
            "contract": "BinaryMarketData",
            "src": "contracts\\BinaryMarketData.sol:30"
          },
          {
            "label": "tradeFees",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "BinaryMarketData",
            "src": "contracts\\BinaryMarketData.sol:32"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "3",
            "type": "t_contract(IERC20Upgradeable)2039",
            "contract": "BinaryMarketData",
            "src": "contracts\\BinaryMarketData.sol:34"
          },
          {
            "label": "_initialized",
            "offset": 20,
            "slot": "3",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 21,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "106",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:522"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155BurnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\extensions\\ERC1155BurnableUpgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\utils\\ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "304",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "label": "_questionIds",
            "offset": 0,
            "slot": "404",
            "type": "t_struct(Counter)2554_storage",
            "contract": "BinaryMarket",
            "src": "contracts\\BinaryMarket.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Question)4321_storage)dyn_storage": {
            "label": "struct BinaryMarketData.Question[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)2039": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)4330_storage)": {
            "label": "mapping(uint256 => struct BinaryMarketData.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2554_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)4330_storage": {
            "label": "struct BinaryMarketData.Market",
            "members": [
              {
                "label": "slot1",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "slot2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "volume",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Question)4321_storage": {
            "label": "struct BinaryMarketData.Question",
            "members": [
              {
                "label": "meta",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "resolveTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "initialLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "fee",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "slot",
                "type": "t_uint8",
                "offset": 1,
                "slot": "3"
              },
              {
                "label": "isPaused",
                "type": "t_bool",
                "offset": 2,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
